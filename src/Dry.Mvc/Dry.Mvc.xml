<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dry.Mvc</name>
    </assembly>
    <members>
        <member name="T:Dry.Mvc.Controllers.DryController">
            <summary>
            基础控制器
            </summary>
        </member>
        <member name="M:Dry.Mvc.Controllers.DryController.Service``1">
            <summary>
            获取服务
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.ActionFilter">
            <summary>
            操作过滤器
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ActionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Dry.Mvc.Infrastructure.ActionFilter})">
            <summary>
            构造体
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            操作进入触发
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ActionFilter.Process(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            操作进入处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            操作结束触发
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.AuthorizationFilter">
            <summary>
            鉴权过滤器
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.AuthorizationFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Dry.Mvc.Infrastructure.AuthorizationFilter})">
            <summary>
            构造体
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.AuthorizationFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            鉴权触发
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.AuthorizationFilter.Process(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            鉴权处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.ExceptionFilter">
            <summary>
            异常过滤器
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ExceptionFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Dry.Mvc.Infrastructure.ExceptionFilter})">
            <summary>
            构造体
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常触发
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ExceptionFilter.Process(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.FilterBase`1">
            <summary>
            过滤器基类
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="P:Dry.Mvc.Infrastructure.FilterBase`1.Area">
            <summary>
            区域
            </summary>
        </member>
        <member name="P:Dry.Mvc.Infrastructure.FilterBase`1.Controller">
            <summary>
            控制器
            </summary>
        </member>
        <member name="P:Dry.Mvc.Infrastructure.FilterBase`1.Action">
            <summary>
            操作
            </summary>
        </member>
        <member name="P:Dry.Mvc.Infrastructure.FilterBase`1.Logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:Dry.Mvc.Infrastructure.FilterBase`1.FilterActions">
            <summary>
            过滤操作
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.FilterBase`1.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            构造体
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.FilterBase`1.OnFilter(`0)">
            <summary>
            过滤入口
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.InvalidModelStateResponseFactory">
            <summary>
            无效状态返回工厂
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.InvalidModelStateResponseFactory.ProduceErrorResponse(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            生成错误返回
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.DateTimeConverter">
            <summary>
            时间格式转换
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.DateTimeConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            读
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.DateTimeConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTime,System.Text.Json.JsonSerializerOptions)">
            <summary>
            写
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.DateTimeNullableConvert">
            <summary>
            可为空时间格式转换
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.DateTimeNullableConvert.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            读
            </summary>
            <param name="reader"></param>
            <param name="typeToConvert"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.DateTimeNullableConvert.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.DateTime},System.Text.Json.JsonSerializerOptions)">
            <summary>
            写
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="T:Dry.Mvc.Infrastructure.ResourceFilter">
            <summary>
            资源过滤器
            </summary>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ResourceFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Dry.Mvc.Infrastructure.ResourceFilter})">
            <summary>
            构造体
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            资源请求进入触发
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ResourceFilter.Process(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            资源请求进入处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Dry.Mvc.Infrastructure.ResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <summary>
            资源请求结束触发
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Dry.Mvc.Resources.ErrorResource">
            <summary>
            错误资源
            </summary>
        </member>
        <member name="P:Dry.Mvc.Resources.ErrorResource.ErrorCode">
            <summary>
            成功
            </summary>
        </member>
        <member name="P:Dry.Mvc.Resources.ErrorResource.Messages">
            <summary>
            失败信息
            </summary>
        </member>
        <member name="M:Dry.Mvc.Resources.ErrorResource.#ctor(System.String)">
            <summary>
            构造体
            </summary>
            <param name="errorCode"></param>
        </member>
        <member name="M:Dry.Mvc.Resources.ErrorResource.#ctor(System.String[])">
            <summary>
            构造体
            </summary>
            <param name="messages"></param>
        </member>
        <member name="M:Dry.Mvc.Resources.ErrorResource.#ctor(System.String,System.String[])">
            <summary>
            构造体
            </summary>
            <param name="errorCode"></param>
            <param name="messages"></param>
        </member>
    </members>
</doc>
