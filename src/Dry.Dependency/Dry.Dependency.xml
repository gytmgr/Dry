<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dry.Dependency</name>
    </assembly>
    <members>
        <member name="T:Dry.Dependency.AssemblyHelper">
            <summary>
            程序集扩展
            </summary>
        </member>
        <member name="M:Dry.Dependency.AssemblyHelper.GetAll(System.String[])">
            <summary>
            获取所有程序集
            </summary>
            <param name="prefixs">要筛选的程序集前缀</param>
            <returns></returns>
        </member>
        <member name="T:Dry.Dependency.ServiceCollectionExtension">
            <summary>
            依赖注入扩展
            </summary>
        </member>
        <member name="M:Dry.Dependency.ServiceCollectionExtension.AddDependency(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String[])">
            <summary>
            注入实现IDependency接口的类型
            </summary>
            <param name="services"></param>
            <param name="prefixs">程序集命名前缀</param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceCollectionExtension.AddDependency(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.String[])">
            <summary>
            注入实现IDependency接口的类型
            </summary>
            <param name="services"></param>
            <param name="onlyLeaf">只注入叶子派生类</param>
            <param name="prefixs">程序集命名前缀</param>
            <returns></returns>
        </member>
        <member name="T:Dry.Dependency.ServiceProviderExtension">
            <summary>
            服务扩展
            </summary>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.ServicesActionAsync``1(System.IServiceProvider,System.Func{``0,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
            多服务操作
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <param name="serviceAction"></param>
            <param name="ascOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.ServicesActionAsync``1(System.IServiceProvider,System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Boolean)">
            <summary>
            多服务操作
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <param name="serviceAction">返回true时，中断跳出</param>
            <param name="ascOrder"></param>
            <returns>是否中断跳出</returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.ServicesActionAsync``1(System.IServiceProvider,System.Object,System.Func{``0,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
            多服务操作
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <param name="serviceKey"></param>
            <param name="serviceAction"></param>
            <param name="ascOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.ServicesActionAsync``1(System.IServiceProvider,System.Object,System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Boolean)">
            <summary>
            多服务操作
            </summary>
            <typeparam name="TService"></typeparam>
            <param name="serviceProvider"></param>
            <param name="serviceKey"></param>
            <param name="serviceAction"></param>
            <param name="ascOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.SetTenantId(System.IServiceProvider,System.String)">
            <summary>
            设置租户id
            </summary>
            <param name="serviceProvider"></param>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.GetTenantId(System.IServiceProvider)">
            <summary>
            获取租户id
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.CreateScopeWithTenantId(System.IServiceProvider)">
            <summary>
            新建域并传递租户id
            </summary>
            <param name="serviceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Dependency.ServiceProviderExtension.CreateScopeWithTenantId(System.IServiceProvider,System.String)">
            <summary>
            新建域并传递租户id
            </summary>
            <param name="serviceProvider"></param>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
