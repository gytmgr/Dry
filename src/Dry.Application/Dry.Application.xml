<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dry.Application</name>
    </assembly>
    <members>
        <member name="T:Dry.Application.Extensions.SortDtoExtension">
            <summary>
            排序dto扩展
            </summary>
        </member>
        <member name="M:Dry.Application.Extensions.SortDtoExtension.GetOrderByParam``2(Dry.Application.Contracts.Dtos.SortDto{``1})">
            <summary>
            获取排序参数
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TEnum"></typeparam>
            <param name="sortDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Extensions.SortDtoExtension.GetOrderByParams``2(System.Collections.Generic.IEnumerable{Dry.Application.Contracts.Dtos.SortDto{``1}})">
            <summary>
            获取排序参数
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TEnum"></typeparam>
            <param name="sortDtos"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationCreateDeleteService`5">
            <summary>
            基础查、增、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateDeleteService`5.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateDeleteService`5.GetDeleteEntityAsync(`4)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateDeleteService`5.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateDeleteService`5.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateDeleteService`5.DeleteAsync(`4)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryCreateDeleteService`6">
            <summary>
            条件查、增、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateDeleteService`6.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateDeleteService`6.GetDeleteEntityAsync(`5)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateDeleteService`6.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateDeleteService`6.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateDeleteService`6.DeleteAsync(`5)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationCreateEditService`6">
            <summary>
            基础查、增、改应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateEditService`6.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateEditService`6.GetEditEntityAsync(`5)">
            <summary>
            获取编辑实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateEditService`6.MapEditEntityAsync(`1,`4)">
            <summary>
            映射实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateEditService`6.SetEditEntityAsync(`1,`4)">
            <summary>
            配置实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateEditService`6.EditedAsync(`1,`4)">
            <summary>
            编辑后处理
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateEditService`6.EditAsync(`5,`4)">
            <summary>
            编辑
            </summary>
            <param name="id"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryCreateEditService`7">
            <summary>
            条件查、增、改应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateEditService`7.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateEditService`7.GetEditEntityAsync(`6)">
            <summary>
            获取编辑实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateEditService`7.MapEditEntityAsync(`1,`5)">
            <summary>
            映射实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateEditService`7.SetEditEntityAsync(`1,`5)">
            <summary>
            配置实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateEditService`7.EditedAsync(`1,`5)">
            <summary>
            编辑后处理
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateEditService`7.EditAsync(`6,`5)">
            <summary>
            编辑
            </summary>
            <param name="id"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationCreateService`4">
            <summary>
            基础查、增应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TCreate"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationCreateService`4._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`4.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`4.MapCreateEntityAsync(`3)">
            <summary>
            映射实体新建数据
            </summary>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`4.SetCreateEntityAsync(`1,`3)">
            <summary>
            配置实体新建数据
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`4.CreateAsync(`3)">
            <summary>
            新建
            </summary>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`4.CreatedAsync(`1,`3)">
            <summary>
            新建完成处理
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationCreateService`5">
            <summary>
            基础查、增应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`5.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationCreateService`5.FindAsync(`4)">
            <summary>
            主键查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryCreateService`5">
            <summary>
            条件查、增应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TCreate"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationQueryCreateService`5._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`5.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`5.MapCreateEntityAsync(`4)">
            <summary>
            映射实体新建数据
            </summary>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`5.SetCreateEntityAsync(`1,`4)">
            <summary>
            配置实体新建数据
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`5.CreatedAsync(`1,`4)">
            <summary>
            新建后处理
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`5.CreateAsync(`4)">
            <summary>
            新建
            </summary>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryCreateService`6">
            <summary>
            条件查、增应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationQueryCreateService`6._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`6.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`6.MapCreateEntityAsync(`4)">
            <summary>
            映射实体新建数据
            </summary>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`6.SetCreateEntityAsync(`1,`4)">
            <summary>
            配置实体新建数据
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`6.CreatedAsync(`1,`4)">
            <summary>
            新建后处理
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryCreateService`6.CreateAsync(`4)">
            <summary>
            新建
            </summary>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationDeleteService`4">
            <summary>
            基础查、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationDeleteService`4._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationDeleteService`4.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationDeleteService`4.GetDeleteEntityAsync(`3)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationDeleteService`4.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationDeleteService`4.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationDeleteService`4.DeleteAsync(`3)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryDeleteService`5">
            <summary>
            条件查、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationQueryDeleteService`5._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryDeleteService`5.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryDeleteService`5.GetDeleteEntityAsync(`4)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryDeleteService`5.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryDeleteService`5.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryDeleteService`5.DeleteAsync(`4)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationEditDeleteService`5">
            <summary>
            基础查、改、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditDeleteService`5.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditDeleteService`5.GetDeleteEntityAsync(`4)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditDeleteService`5.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditDeleteService`5.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditDeleteService`5.DeleteAsync(`4)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryEditDeleteService`6">
            <summary>
            条件查、改、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditDeleteService`6.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditDeleteService`6.GetDeleteEntityAsync(`5)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditDeleteService`6.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditDeleteService`6.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditDeleteService`6.DeleteAsync(`5)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationEditService`5">
            <summary>
            基础查、改应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationEditService`5._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditService`5.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditService`5.GetEditEntityAsync(`4)">
            <summary>
            获取编辑实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditService`5.MapEditEntityAsync(`1,`3)">
            <summary>
            映射实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditService`5.SetEditEntityAsync(`1,`3)">
            <summary>
            配置实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditService`5.EditedAsync(`1,`3)">
            <summary>
            编辑后处理
            </summary>
            <param name="entity"></param>
            <param name="createDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationEditService`5.EditAsync(`4,`3)">
            <summary>
            编辑
            </summary>
            <param name="id"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryEditService`6">
            <summary>
            条件查、改应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationQueryEditService`6._unitOfWork">
            <summary>
            工作单元
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditService`6.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditService`6.GetEditEntityAsync(`5)">
            <summary>
            获取编辑实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditService`6.MapEditEntityAsync(`1,`4)">
            <summary>
            映射实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditService`6.SetEditEntityAsync(`1,`4)">
            <summary>
            配置实体编辑数据
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditService`6.EditedAsync(`1,`4)">
            <summary>
            编辑后处理
            </summary>
            <param name="entity"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryEditService`6.EditAsync(`5,`4)">
            <summary>
            编辑
            </summary>
            <param name="id"></param>
            <param name="editDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryService`3">
            <summary>
            查询应用服务接口
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.GetPropertyLoads(`2)">
            <summary>
            获取属性加载表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.GetPropertyLoadsAsync(`2)">
            <summary>
            获取属性加载表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.GetPredicates(`2)">
            <summary>
            获取查询条件表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.GetPredicatesAsync(`2)">
            <summary>
            获取查询条件表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.GetOrderBys(`2)">
            <summary>
            获取排序表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.GetOrderBysAsync(`2)">
            <summary>
            获取排序表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.SingleResultMapAsync(`0,`2)">
            <summary>
            单一结果映射
            </summary>
            <param name="entity"></param>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.ArrayResultMapAsync(`0[],`2)">
            <summary>
            多结果映射
            </summary>
            <param name="entities"></param>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.AnyAsync(`2)">
            <summary>
            是否存在
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.CountAsync(`2)">
            <summary>
            数量查询
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.FirstAsync(`2)">
            <summary>
            条件查询第一条
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.ArrayAsync(`2)">
            <summary>
            条件查询
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`3.ArrayAsync(Dry.Core.Model.PagedQuery{`2})">
            <summary>
            分页条件查询
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryService`4">
            <summary>
            条件查询应用服务接口
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`4.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`4.GetPredicates(`2)">
            <summary>
            获取查询条件表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`4.GetOrderBys(`2)">
            <summary>
            获取排序表达式
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`4.FindAsync(`3)">
            <summary>
            主键查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationQueryService`7">
            <summary>
            条件查、增、改、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TQuery"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`7.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`7.GetDeleteEntityAsync(`6)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`7.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`7.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationQueryService`7.DeleteAsync(`6)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationService`1">
            <summary>
            应用服务
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.ApplicationService`1._serviceProvider">
            <summary>
            服务生成器
            </summary>
        </member>
        <member name="F:Dry.Application.Services.ApplicationService`1._mapper">
            <summary>
            对象映射
            </summary>
        </member>
        <member name="F:Dry.Application.Services.ApplicationService`1._readOnlyRepository">
            <summary>
            只读仓储
            </summary>
        </member>
        <member name="F:Dry.Application.Services.ApplicationService`1._repository">
            <summary>
            仓储
            </summary>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.ReadOnlyRepository``1">
            <summary>
            获取只读仓储
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.Repository``1">
            <summary>
            获取仓储
            </summary>
            <typeparam name="TOtherEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.GetPropertyLoads">
            <summary>
            获取属性加载表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.GetPropertyLoadsAsync">
            <summary>
            获取属性加载表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.GetPredicates">
            <summary>
            获取查询条件表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.GetPredicatesAsync">
            <summary>
            获取查询条件表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.GetOrderBys">
            <summary>
            获取排序表达式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`1.GetOrderBysAsync">
            <summary>
            获取排序表达式
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationService`2">
            <summary>
            应用服务
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.SingleResultMapAsync(`0)">
            <summary>
            单一结果映射
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.ArrayResultMapAsync(`0[])">
            <summary>
            多结果映射
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.AnyAsync">
            <summary>
            是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.CountAsync">
            <summary>
            数量查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.FirstAsync">
            <summary>
            查询第一条
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.ArrayAsync">
            <summary>
            查询所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`2.ArrayAsync(Dry.Core.Model.PagedQuery)">
            <summary>
            分页条件查询
            </summary>
            <param name="queryDto"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationService`3">
            <summary>
            应用服务
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`3.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`3.FindAsync(`2)">
            <summary>
            主键查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.ApplicationService`6">
            <summary>
            基础查、增、改、删应用服务接口
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TCreate"></typeparam>
            <typeparam name="TEdit"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`6.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`6.GetDeleteEntityAsync(`5)">
            <summary>
            获取删除实体
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:Dry.Core.Model.NullDataBizException"></exception>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`6.SetDeleteEntityAsync(`1)">
            <summary>
            配置实体删除数据
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`6.DeletedAsync(`1)">
            <summary>
            删除后处理
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.ApplicationService`6.DeleteAsync(`5)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Dry.Application.Services.DomainApplicationService`1">
            <summary>
            领域应用服务
            </summary>
            <typeparam name="TBoundedContext"></typeparam>
        </member>
        <member name="F:Dry.Application.Services.DomainApplicationService`1._serviceProvider">
            <summary>
            服务生成器
            </summary>
        </member>
        <member name="M:Dry.Application.Services.DomainApplicationService`1.#ctor(System.IServiceProvider)">
            <summary>
            构造体
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Dry.Application.Services.DomainApplicationService`1.DbConnectionStringSetAsync(System.String)">
            <summary>
            数据库连接字符串配置
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:Dry.Application.Services.DomainApplicationService`1.DbMigrateAsync">
            <summary>
            数据库迁移
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
